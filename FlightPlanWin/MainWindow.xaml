<Window x:Class="FlightPlanWin.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:resx="clr-namespace:FlightPlanWin.L10n"
		xmlns:local="clr-namespace:FlightPlanWin"
        Title="FlightPlanWin" Height="800" Width="Auto" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:my="clr-namespace:FlightPlanModel;assembly=FlightPlanModel" Loaded="Window_Loaded" VerticalAlignment="Top" Icon="/FlightPlanWin;component/Images/ic_launcher.png" SizeToContent="Width" ResizeMode="CanResize">
	<Window.Resources>
		<CollectionViewSource x:Key="airfieldViewSource" d:DesignSource="{d:DesignInstance my:Airfield, CreateList=True}" />
		<local:VisibilityConverter x:Key="visibilityConverter" />
	</Window.Resources>
	<Grid DataContext="{StaticResource airfieldViewSource}">
		<DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" HorizontalAlignment="Stretch" ItemsSource="{Binding}" Name="airfieldDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected" VerticalAlignment="Stretch" Width="Auto" Margin="0,47,0,0" IsReadOnly="True">
			<DataGrid.Columns>
				<DataGridTextColumn x:Name="countryColumn" Binding="{Binding Path=Country}" Header="{x:Static resx:Language.GridColumn_Country}" Width="Auto" />
				<DataGridTextColumn x:Name="nameColumn" Binding="{Binding Path=Name}" Header="{x:Static resx:Language.GridColumn_Name}" Width="Auto" />
				<DataGridTextColumn x:Name="iCAOColumn" Binding="{Binding Path=ICAO}" Header="ICAO" Width="Auto" />
				<DataGridTextColumn x:Name="latitudeColumn" Binding="{Binding Path=Latitude}" Header="{x:Static resx:Language.GridColumn_Latitude}" Width="SizeToHeader" />
				<DataGridTextColumn x:Name="longitudeColumn" Binding="{Binding Path=Longitude}" Header="{x:Static resx:Language.GridColumn_Longitude}" Width="SizeToHeader" />
				<DataGridTextColumn x:Name="distanceColumn" Binding="{Binding Path=Distance, StringFormat='\{0:0.00\} NM'}" Header="{x:Static resx:Language.GridColumn_Distance}" Width="Auto" />
				<DataGridTextColumn x:Name="visibilityColumn" Binding="{Binding Path=Visibility, Converter={StaticResource visibilityConverter }, TargetNullValue='N/A'}" Header="{x:Static resx:Language.GridColumn_Visibility}" Width="Auto" />
				<DataGridTextColumn x:Name="cloudbaseColumn" Binding="{Binding Path=Cloudbase,TargetNullValue='N/A',StringFormat='\{0\} ft'}" Header="{x:Static resx:Language.GridColumn_Cloudbase}" Width="Auto" />
				<DataGridTextColumn x:Name="colourStateColumn" Binding="{Binding Path=ColourState}" Header="{x:Static resx:Language.GridColumn_ColourState}" Width="SizeToHeader">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="BLU">
                                    <Setter Property="Background" Value="Blue"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="Text" Value="GRN">
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="Text" Value="YLO">
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="AMB">
                                    <Setter Property="Background" Value="Orange"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="Text" Value="RED">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="Text" Value="N/A">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="observationAgeColumn" Binding="{Binding Path=ObservationAge}" Header="{x:Static resx:Language.GridColumn_ObservationAge}" Width="Auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=isInvalid}" Value="true">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="observationColumn" Binding="{Binding Path=Observation}" Header="{x:Static resx:Language.GridColumn_Observation}" Width="Auto" MinWidth="600" />
			</DataGrid.Columns>
			<DataGrid.ContextMenu>
				<ContextMenu>
					<MenuItem Header="{x:Static resx:Language.MenuItem_SetAsHome}" Click="SetAsHome_Click" />
				</ContextMenu>
			</DataGrid.ContextMenu>
		</DataGrid>
        <ProgressBar Height="23" HorizontalAlignment="Stretch" Name="progressBar1" VerticalAlignment="Top" Width="Auto" Margin="377,24,0,0" />
        <Label Height="23" Name="statusLabel" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" FontWeight="Bold" FontSize="10" Width="Auto" HorizontalAlignment="Center" Margin="377,24,0,0" />
        <ComboBox Height="23" HorizontalAlignment="Left" Name="comboBox1" VerticalAlignment="Top" Width="227" SelectionChanged="comboBox1_SelectionChanged" Margin="0,24,0,0" />
        <Button Content="{x:Static resx:Language.Button_Refresh}" Height="23" HorizontalAlignment="Left" Margin="227,24,0,0" Name="btnRefresh" VerticalAlignment="Top" Width="75" Click="btnRefresh_Click" IsEnabled="False" />
        <Button Content="{x:Static resx:Language.Button_Stop}" Height="23" HorizontalAlignment="Left" Margin="302,24,0,0" Name="btnStop" VerticalAlignment="Top" Width="75" Click="btnStop_Click" IsEnabled="False" />
		<Menu Height="23" HorizontalAlignment="Stretch" Name="menu1" VerticalAlignment="Top" Width="Auto">
			<MenuItem Header="{x:Static resx:Language.Menu_File}" >
				<MenuItem Header="{x:Static resx:Language.MenuItem_Print}" Click="Print_Click" />
				<MenuItem Header="{x:Static resx:Language.MenuItem_PrintPreview}" Click="PrintPreview_Click" />
				<Separator />
				<MenuItem Header="{x:Static resx:Language.MenuItem_Exit}" Click="Exit_Click" />
			</MenuItem>
			<MenuItem Header="{x:Static resx:Language.Menu_Help}" >
				<MenuItem Header="{x:Static resx:Language.MenuItem_About}" Click="About_Click" />
			</MenuItem>
		</Menu>
	</Grid>
</Window>
